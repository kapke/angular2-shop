{
    "Vanilla JS": [
        "Using Vanilla JS and raw DOM operations display single product tile",
        "Display list of products using code from previous task",
        "Above list of products display list of several promoted products",
        "Refactor your code: simplify it and reduce repetitions"
    ],
    "TypeScript basics": [
        "Prepare TypeScript configuration. Change extension of your <code>.js</code> files into <code>.ts</code> to check whether code compiles properly",
        "Adjust your code to use classes and modules",
        "Add button for hiding promoted products",
        "Declare type declarations everywhere it's needed",
        "Refactor your code: simplify it and reduce repetitions"
    ],
    "Angular 2 basics": [
        "Start new Angular2 project using <a href='https://github.com/angular/angular-cli' target=_blank>ng-cli</a>",
        "Display single product tile",
        "Display list of products",
        "Above list of products display list of several promoted products.*"
    ],
    "Components": [
        "Create a component for single product tile",
        "Create a component for a list of products",
        "Create a component for a list of promoted products*",
        "Add tags to product and display them*",
        "Refactor code: simplify it, improve it's readability. Add type declarations in needed places*"
    ],
    "Events": [
        "Add products filtering basing on their name",
        "Change filtering to use all of product properties",
        "Make filtering case insensitive",
        "Add a button for sorting by price. Each click on button should toggle sorting direction*",
        "For button created in previous task add indicator of sorting direction*",
        "Add sorting by name on separate button. Enabling sorting by name should disable sorting by price*",
        "Refactor code: extract components, simplify it and remove repetitions*"
    ],
    "Pipes": [
        "Use <code>currency</code> pipe for displaying product's price",
        "Move filtering into custom pipe*",
        "Move sorting into custom pipe*",
        "Refactor code*"
    ],
    "Services and dependency injection": [
        "Move all products data into products repository",
        "Register the repository in dependency injection container and inject it into main app component"
    ],
    "Forms": [
        "Create simple order form (name, surname, e-mail, address, product/product name, products count). On <code>submit</code> event log order data into console",
        "Add validation to form - every field should be required",
        "Add validation for products count - it should be natural number greater than 0*",
        "Add custom validation for e-mail address*",
        "Refactor your code: simplify it and extract components*"
    ],
    "Http + RxJS": [
        "Create second repository service using <code>Http</code> module to provide products data from server. To obtain data you can use following URL: <code>https://shining-torch-4509.firebaseio.com/products.json</code>. You can also create <code>.json</code> files containing data about products - webpack will serve them correctly.",
        "Create an interface for products repository. All implementations should implement it properly. Check whether it's possible to switch between them by making exactly one change in providers declaration",
        "Add retrying 5 times to Http&ndash;based implementation. Check if it works properly by changing data URI into invalid one.*",
        "Change retrying strategy to add 1 second delay between tries.*",
        "Refactor code: make sure that every action is performed in proper place.*"
    ],
    "Routing": [
        "Configure router with 2 routes: products list and order form",
        "Create a menu",
        "Distinguish active menu item by applying specific styles.*",
        "Add route for single product. Make product tile a link to product details.*"
    ],
    "Testing": [
        "Test products repository (in-memory implementation)",
        "Test pipes for sorting and filtering.*",
        "Test component of your choose.*"
    ],
    "Directives": [
        "Create a directive adding specific styles to promoted product. Check whether it's possible to control component's behaviour."
    ],
    "Cart": "Add cart function. Click on specific button should add product to cart. Order form should collect data from cart. User should be able to see cart content."
}
